window.jest_html_reporters_callback__({"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":11,"numPassedTests":28,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":11,"numTotalTests":28,"startTime":1701119741169,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1701119751636,"runtime":6203,"slow":true,"start":1701119745433},"testFilePath":"C:\\Users\\danie\\Desktop\\RedditLiteCopy\\backend\\tests\\models\\baseEntity.model.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Base Entity Tests"],"duration":62,"failureMessages":[],"fullName":"Base Entity Tests should have a valid baseEntityModel","status":"passed","title":"should have a valid baseEntityModel"},{"ancestorTitles":["Base Entity Tests"],"duration":1,"failureMessages":[],"fullName":"Base Entity Tests should create a valid base entity","status":"passed","title":"should create a valid base entity"},{"ancestorTitles":["Base Entity Tests"],"duration":1,"failureMessages":[],"fullName":"Base Entity Tests should set active to false when logically removed","status":"passed","title":"should set active to false when logically removed"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1701119751848,"runtime":6383,"slow":true,"start":1701119745465},"testFilePath":"C:\\Users\\danie\\Desktop\\RedditLiteCopy\\backend\\tests\\helpers\\record.helper.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["setNewRecordInfo function"],"duration":45,"failureMessages":[],"fullName":"setNewRecordInfo function should set new record information correctly","status":"passed","title":"should set new record information correctly"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1701119751939,"runtime":6497,"slow":true,"start":1701119745442},"testFilePath":"C:\\Users\\danie\\Desktop\\RedditLiteCopy\\backend\\tests\\middlewares\\performance.mw.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Performance Middleware"],"duration":292,"failureMessages":[],"fullName":"Performance Middleware should log API request start and end times","status":"passed","title":"should log API request start and end times"},{"ancestorTitles":["Performance Middleware"],"duration":17,"failureMessages":[],"fullName":"Performance Middleware should call next function","status":"passed","title":"should call next function"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1701119752023,"runtime":6589,"slow":true,"start":1701119745434},"testFilePath":"C:\\Users\\danie\\Desktop\\RedditLiteCopy\\backend\\tests\\middlewares\\authentication.mw.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Authentication Middleware"],"duration":191,"failureMessages":[],"fullName":"Authentication Middleware should return 401 if authToken or authSignature is missing","status":"passed","title":"should return 401 if authToken or authSignature is missing"},{"ancestorTitles":["Authentication Middleware"],"duration":10,"failureMessages":[],"fullName":"Authentication Middleware should verify the JWT and call next if successful","status":"passed","title":"should verify the JWT and call next if successful"},{"ancestorTitles":["Authentication Middleware"],"duration":34,"failureMessages":[],"fullName":"Authentication Middleware should return 403 if JWT verification fails","status":"passed","title":"should return 403 if JWT verification fails"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1701119752242,"runtime":6813,"slow":true,"start":1701119745429},"testFilePath":"C:\\Users\\danie\\Desktop\\RedditLiteCopy\\backend\\tests\\helpers\\response.helper.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Response Helper Functions"],"duration":18,"failureMessages":[],"fullName":"Response Helper Functions should set status to 500 and send the provided parameters for badRequest","status":"passed","title":"should set status to 500 and send the provided parameters for badRequest"},{"ancestorTitles":["Response Helper Functions"],"duration":1,"failureMessages":[],"fullName":"Response Helper Functions should set status to 200 and send the provided parameters for Ok","status":"passed","title":"should set status to 200 and send the provided parameters for Ok"},{"ancestorTitles":["Response Helper Functions"],"duration":1,"failureMessages":[],"fullName":"Response Helper Functions should set status to 400 and send the provided parameters for ClientError","status":"passed","title":"should set status to 400 and send the provided parameters for ClientError"},{"ancestorTitles":["Response Helper Functions"],"duration":1,"failureMessages":[],"fullName":"Response Helper Functions should set status to 401 and send the provided parameters for Unauthorized","status":"passed","title":"should set status to 401 and send the provided parameters for Unauthorized"},{"ancestorTitles":["Response Helper Functions"],"duration":1,"failureMessages":[],"fullName":"Response Helper Functions should set status to 403 and send the provided parameters for Forbidden","status":"passed","title":"should set status to 403 and send the provided parameters for Forbidden"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1701119757238,"runtime":11793,"slow":true,"start":1701119745445},"testFilePath":"C:\\Users\\danie\\Desktop\\RedditLiteCopy\\backend\\tests\\models\\user.model.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["User Model Tests"],"duration":27,"failureMessages":[],"fullName":"User Model Tests should create a new user","status":"passed","title":"should create a new user"},{"ancestorTitles":["User Model Tests"],"duration":14,"failureMessages":[],"fullName":"User Model Tests should find active users","status":"passed","title":"should find active users"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1701119757671,"runtime":12237,"slow":true,"start":1701119745434},"testFilePath":"C:\\Users\\danie\\Desktop\\RedditLiteCopy\\backend\\tests\\models\\post.model.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Post Model"],"duration":43,"failureMessages":[],"fullName":"Post Model should create a new post","status":"passed","title":"should create a new post"},{"ancestorTitles":["Post Model"],"duration":23,"failureMessages":[],"fullName":"Post Model should find active posts","status":"passed","title":"should find active posts"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1701119758148,"runtime":12712,"slow":true,"start":1701119745436},"testFilePath":"C:\\Users\\danie\\Desktop\\RedditLiteCopy\\backend\\tests\\models\\comment.model.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Comment Model Tests"],"duration":24,"failureMessages":[],"fullName":"Comment Model Tests should create a new comment","status":"passed","title":"should create a new comment"},{"ancestorTitles":["Comment Model Tests"],"duration":5,"failureMessages":[],"fullName":"Comment Model Tests should find active comments","status":"passed","title":"should find active comments"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1701119758634,"runtime":13187,"slow":true,"start":1701119745447},"testFilePath":"C:\\Users\\danie\\Desktop\\RedditLiteCopy\\backend\\tests\\controllers\\userController.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["User Controller"],"duration":81,"failureMessages":[],"fullName":"User Controller should register a new user","status":"passed","title":"should register a new user"},{"ancestorTitles":["User Controller"],"duration":12,"failureMessages":[],"fullName":"User Controller should fail to register with invalid data","status":"passed","title":"should fail to register with invalid data"},{"ancestorTitles":["User Controller"],"duration":22,"failureMessages":[],"fullName":"User Controller should fail to log in with valid credentials","status":"passed","title":"should fail to log in with valid credentials"},{"ancestorTitles":["User Controller"],"duration":18,"failureMessages":[],"fullName":"User Controller should fail to log in with invalid credentials","status":"passed","title":"should fail to log in with invalid credentials"},{"ancestorTitles":["User Controller"],"duration":8,"failureMessages":[],"fullName":"User Controller should get user by ID","status":"passed","title":"should get user by ID"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1701119758979,"runtime":13547,"slow":true,"start":1701119745432},"testFilePath":"C:\\Users\\danie\\Desktop\\RedditLiteCopy\\backend\\tests\\controllers\\postController.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Post Controller"],"duration":51,"failureMessages":[],"fullName":"Post Controller should get post by postId","status":"passed","title":"should get post by postId"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1701119759377,"runtime":13943,"slow":true,"start":1701119745434},"testFilePath":"C:\\Users\\danie\\Desktop\\RedditLiteCopy\\backend\\tests\\controllers\\commentController.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Comment Controller"],"duration":35,"failureMessages":[],"fullName":"Comment Controller should get comments by postId","status":"passed","title":"should get comments by postId"},{"ancestorTitles":["Comment Controller"],"duration":18,"failureMessages":[],"fullName":"Comment Controller should get a comment by commentId","status":"passed","title":"should get a comment by commentId"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":[],"coverageDirectory":"C:\\Users\\danie\\Desktop\\RedditLiteCopy\\backend\\coverage","coverageProvider":"babel","coverageReporters":["json","text","lcov","clover"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":11,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["C:\\Users\\danie\\Desktop\\RedditLiteCopy\\backend\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"./html-report","filename":"report.html","expand":true}]],"rootDir":"C:\\Users\\danie\\Desktop\\RedditLiteCopy\\backend","runTestsByPath":false,"seed":-2132375287,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"C:\\Users\\danie\\Desktop\\RedditLiteCopy\\backend\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"verbose":true,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1701119759940,"_reporterOptions":{"publicPath":"./html-report","filename":"report.html","expand":true,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false},"logInfoMapping":{},"attachInfos":{}})